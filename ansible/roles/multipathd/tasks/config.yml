---
- name: Ensuring config directories exist
  file:
    path: "{{ node_config_directory }}/{{ item.key }}"
    state: "directory"
    owner: "{{ config_owner_user }}"
    group: "{{ config_owner_group }}"
    mode: "0770"
  become: true
  when:
    - inventory_hostname in groups[item.value.group]
    - item.value.enabled | bool
  with_dict: "{{ multipathd_services }}"

- name: Copying over config.json files for services
  template:
    src: "{{ item.key }}.json.j2"
    dest: "{{ node_config_directory }}/{{ item.key }}/config.json"
    mode: "0660"
  become: true
  when:
    - inventory_hostname in groups[item.value.group]
    - item.value.enabled | bool
  with_dict: "{{ multipathd_services }}"
  notify:
    - Restart multipathd container

- name: Check if multipath.conf exists in node_custom_config
  local_action: stat path={{ node_custom_config }}/multipath.conf
  register: stat_multipath_conf

- name: Copying over multipath.conf (template)
  template:
    src: "multipath.conf.j2"
    dest: "{{ node_config_directory }}/{{ item.key }}/multipath.conf"
    mode: "0660"
  become: true
  when:
    - inventory_hostname in groups[item.value.group]
    - item.value.enabled | bool
    - ! stat_multipath_conf.stat.exists
  with_dict: "{{ multipathd_services }}"
  notify:
    - Restart multipathd container

- name: Copying over multipath.conf (custom_config)
  template:
    src: "{{ node_custom_config }}/multipath.conf"
    dest: "{{ node_config_directory }}/{{ item.key }}/multipath.conf"
    mode: "0660"
  become: true
  when:
    - inventory_hostname in groups[item.value.group]
    - item.value.enabled | bool
    - stat_multipath_conf.stat.exists
  with_dict: "{{ multipathd_services }}"
  notify:
    - Restart multipathd container

- include_tasks: check-containers.yml
  when: kolla_action != "config"
